name: Terraform Configuration Drift Detection

on:
  workflow_dispatch:
  schedule:
    - cron: '41 3 * * *'  # runs nightly at 3:41am

permissions:
  id-token: write        # needed for GitHub OIDC
  contents: read
  issues: write

env:
  ARM_CLIENT_ID:     ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID:     ${{ secrets.AZURE_TENANT_ID }}
  ARM_ACCESS_KEY:    ${{ secrets.ARM_ACCESS_KEY }}

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure OIDC login
        uses: azure/login@v1
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: false

      - name: Debug: show OIDC token subject
        shell: bash
        run: |
          # Fetch the raw token
          OIDCTOKEN=$(curl --fail --silent \
            -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            $ACTIONS_ID_TOKEN_REQUEST_URL)
          echo ">>>> Full ID token payload:"
          echo "$OIDCTOKEN" | jq .
          echo
          echo ">>>> Subject (sub) claim:"
          echo "$OIDCTOKEN" | jq -r .sub

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: tf-plan
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan \
            || export exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          if [ $exitcode -eq 1 ]; then
            echo "Terraform Plan Failed!"
            exit 1
          fi

      - name: Publish Terraform Plan artifact
        if: steps.tf-plan.outputs.exitcode != '1'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Create String Output
        if: steps.tf-plan.outputs.exitcode != '1'
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform show -no-color tfplan)
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: Publish Terraform Plan to Task Summary
        if: steps.tf-plan.outputs.exitcode != '1'
        run: echo "${{ steps.tf-plan-string.outputs.summary }}" >> $GITHUB_STEP_SUMMARY

      - name: Publish Drift Report (open/update)
        if: steps.tf-plan.outputs.exitcode == '2'
        uses: actions/github-script@v7
        env:
          SUMMARY: "${{ steps.tf-plan-string.outputs.summary }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = process.env.SUMMARY;
            const title = 'Terraform Configuration Drift Detected';
            const creator = 'github-actions[bot]';
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner, repo: context.repo.repo,
              state: 'open', creator, title
            });
            if (issues.data.length > 0) {
              const issue = issues.data[0];
              if (issue.body !== body) {
                await github.rest.issues.update({
                  owner: context.repo.owner, repo: context.repo.repo,
                  issue_number: issue.number, body
                });
              }
            } else {
              await github.rest.issues.create({
                owner: context.repo.owner, repo: context.repo.repo,
                title, body
              });
            }

      - name: Publish Drift Report (close)
        if: steps.tf-plan.outputs.exitcode == '0'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Terraform Configuration Drift Detected';
            const creator = 'github-actions[bot]';
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner, repo: context.repo.repo,
              state: 'open', creator, title
            });
            if (issues.data.length > 0) {
              await github.rest.issues.update({
                owner: context.repo.owner, repo: context.repo.repo,
                issue_number: issues.data[0].number,
                state: 'closed'
              });
            }

      - name: Error on Failure
        if: steps.tf-plan.outputs.exitcode == '2'
        run: exit 1
